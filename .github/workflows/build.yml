name: Check and build packages

on:
  schedule:
    - cron: '0 */12 * * *'
  push:
    branches:
      - main

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Install Python and pip
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
        
      - name: Install ubuntu dependencies
        run: |
          sudo apt update
          sudo apt install -y secure-delete neofetch libarchive-tools rclone

      - name: Prepare the machine
        run: |
          set -e
          neofetch

          mkdir -p ~/.config/rclone

          cat <<EOF >> ~/.config/rclone/rclone.conf
          ${{secrets.RCLONE_CONFIG}}
          EOF

          mkdir ~/repo
          rclone mount --daemon ${{vars.RCLONE_MOUNT_PATH}} ~/repo
          
          for i in {1..10}; do
            n_of_files=$(ls -1 ~/repo | wc -l)
            if [ $n_of_files -gt 0 ]; then
              echo "$n_of_files files found in the directory."
              break
            fi
            if [ $i -eq 10 ]; then
              echo "Unable to find any files in the directory."
              echo "If it a new repository, create a new file on the path."
              exit 1
            fi
            echo "Waiting for files to be created in the directory...$i"
            sleep 1
          done

          ls -lahH ~/repo

          cat <<EOF >> ~/gpg_privatekey.asc
          ${{secrets.GPG_PRIVATE_KEY}}
          EOF
          chmod 600 ~/gpg_privatekey.asc
          gpg --import ~/gpg_privatekey.asc
          srm ~/gpg_privatekey.asc
          
          pip install -r requirements.txt
          
          cat <<EOF >> ./copy.sh
          #!/bin/bash
          set -e
          file_size=\$(stat -c %s "\$1" | numfmt --to=iec-i --suffix=B --format='%.2f')
          echo "Copying $1 ... $file_size"
          rclone copy "$1" "${{vars.RCLONE_MOUNT_PATH}}/"
          EOF
          chmod +x ./copy.sh
          cat ./copy.sh
          exit 1
      - name: Run the builder
        env:
          REPO_NAME: ${{vars.REPO_NAME}}
          MANTAINER_NAME: ${{vars.MANTAINER_NAME}}
          MANTAINER_EMAIL: ${{vars.MANTAINER_EMAIL}}
          CUSTOM_REPO_NAME: ${{vars.CUSTOM_REPO_NAME}}
          CUSTOM_REPO_KEYID: ${{vars.CUSTOM_REPO_KEYID}}
          CUSTOM_REPO_URL: ${{secrets.CUSTOM_REPO_URL}}
          COPY_COMMAND: ./copy.sh
        run: |
          python3 src/main.py
      
      - name: Cleanup
        run: |
          umount ~/repo
          srm -r ~/.gnupg
          srm -r ~/.config/rclone
